// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package dao

import (
	"context"

	"gorm.io/gorm"
	"gorm.io/gorm/clause"
	"gorm.io/gorm/schema"

	"gorm.io/gen"
	"gorm.io/gen/field"

	"gorm.io/plugin/dbresolver"

	"dredger/model"
)

func newDredgerDatum(db *gorm.DB, opts ...gen.DOOption) dredgerDatum {
	_dredgerDatum := dredgerDatum{}

	_dredgerDatum.dredgerDatumDo.UseDB(db, opts...)
	_dredgerDatum.dredgerDatumDo.UseModel(&model.DredgerDatum{})

	tableName := _dredgerDatum.dredgerDatumDo.TableName()
	_dredgerDatum.ALL = field.NewAsterisk(tableName)
	_dredgerDatum.ID = field.NewInt64(tableName, "id")
	_dredgerDatum.ShipName = field.NewString(tableName, "ship_name")
	_dredgerDatum.RecordTime = field.NewInt64(tableName, "record_time")
	_dredgerDatum.LeftEarDraft = field.NewFloat64(tableName, "left_ear_draft")
	_dredgerDatum.UnderwaterPumpSuctionSealPressure = field.NewFloat64(tableName, "underwater_pump_suction_seal_pressure")
	_dredgerDatum.UnderwaterPumpShaftSealPressure = field.NewFloat64(tableName, "underwater_pump_shaft_seal_pressure")
	_dredgerDatum.RightEarDraft = field.NewFloat64(tableName, "right_ear_draft")
	_dredgerDatum.UnderwaterPumpSpeed = field.NewFloat64(tableName, "underwater_pump_speed")
	_dredgerDatum.FlowVelocity = field.NewFloat64(tableName, "flow_velocity")
	_dredgerDatum.Density = field.NewFloat64(tableName, "density")
	_dredgerDatum.UnderwaterPumpMotorCurrent = field.NewFloat64(tableName, "underwater_pump_motor_current")
	_dredgerDatum.TrolleyTravel = field.NewFloat64(tableName, "trolley_travel")
	_dredgerDatum.CutterSpeed = field.NewFloat64(tableName, "cutter_speed")
	_dredgerDatum.UnderwaterPumpSuctionVacuum = field.NewFloat64(tableName, "underwater_pump_suction_vacuum")
	_dredgerDatum.BridgeAngle = field.NewFloat64(tableName, "bridge_angle")
	_dredgerDatum.CompassAngle = field.NewFloat64(tableName, "compass_angle")
	_dredgerDatum.Gps1X = field.NewFloat64(tableName, "gps1_x")
	_dredgerDatum.Gps1Y = field.NewFloat64(tableName, "gps1_y")
	_dredgerDatum.Gps1Heading = field.NewFloat64(tableName, "gps1_heading")
	_dredgerDatum.Gps1Speed = field.NewFloat64(tableName, "gps1_speed")
	_dredgerDatum.TideLevel = field.NewFloat64(tableName, "tide_level")
	_dredgerDatum.WaterDensity = field.NewFloat64(tableName, "water_density")
	_dredgerDatum.FieldSlurryDensity = field.NewFloat64(tableName, "field_slurry_density")
	_dredgerDatum.CompassRadian = field.NewFloat64(tableName, "compass_radian")
	_dredgerDatum.Gps1Latitude = field.NewFloat64(tableName, "gps1_latitude")
	_dredgerDatum.Gps1Longitude = field.NewFloat64(tableName, "gps1_longitude")
	_dredgerDatum.EarDraft = field.NewFloat64(tableName, "ear_draft")
	_dredgerDatum.TransverseSpeed = field.NewFloat64(tableName, "transverse_speed")
	_dredgerDatum.HourlyOutputRate = field.NewFloat64(tableName, "hourly_output_rate")
	_dredgerDatum.RotationRadius = field.NewFloat64(tableName, "rotation_radius")
	_dredgerDatum.CutterX = field.NewFloat64(tableName, "cutter_x")
	_dredgerDatum.CutterY = field.NewFloat64(tableName, "cutter_y")
	_dredgerDatum.OutletFlowVelocity = field.NewFloat64(tableName, "outlet_flow_velocity")
	_dredgerDatum.Concentration = field.NewFloat64(tableName, "concentration")
	_dredgerDatum.FlowRate = field.NewFloat64(tableName, "flow_rate")
	_dredgerDatum.CutterSystemPressure = field.NewFloat64(tableName, "cutter_system_pressure")
	_dredgerDatum.BridgeWinchPressure = field.NewFloat64(tableName, "bridge_winch_pressure")
	_dredgerDatum.VacuumReleaseValvePressure = field.NewFloat64(tableName, "vacuum_release_valve_pressure")
	_dredgerDatum.MainPilePressure = field.NewFloat64(tableName, "main_pile_pressure")
	_dredgerDatum.Gps2X = field.NewFloat64(tableName, "gps2_x")
	_dredgerDatum.Gps2Y = field.NewFloat64(tableName, "gps2_y")
	_dredgerDatum.Gps2Heading = field.NewFloat64(tableName, "gps2_heading")
	_dredgerDatum.Gps2Speed = field.NewFloat64(tableName, "gps2_speed")
	_dredgerDatum.NaturalSoilDensity = field.NewFloat64(tableName, "natural_soil_density")
	_dredgerDatum.Gps2Latitude = field.NewFloat64(tableName, "gps2_latitude")
	_dredgerDatum.Gps2Longitude = field.NewFloat64(tableName, "gps2_longitude")
	_dredgerDatum.LeftDensity = field.NewFloat64(tableName, "left_density")
	_dredgerDatum.LeftFlowVelocity = field.NewFloat64(tableName, "left_flow_velocity")
	_dredgerDatum.SlurryOutput = field.NewFloat64(tableName, "slurry_output")
	_dredgerDatum.DrySoilOutput = field.NewFloat64(tableName, "dry_soil_output")
	_dredgerDatum.DryTonOutput = field.NewFloat64(tableName, "dry_ton_output")
	_dredgerDatum.OutputRate = field.NewFloat64(tableName, "output_rate")
	_dredgerDatum.CurrentShiftOutputRate = field.NewFloat64(tableName, "current_shift_output_rate")
	_dredgerDatum.CurrentShiftOutput = field.NewFloat64(tableName, "current_shift_output")
	_dredgerDatum.TransverseDistance = field.NewFloat64(tableName, "transverse_distance")
	_dredgerDatum.CurrentShift = field.NewInt32(tableName, "current_shift")
	_dredgerDatum.TransverseAngle = field.NewFloat64(tableName, "transverse_angle")
	_dredgerDatum.DailyCumulativeOutput = field.NewFloat64(tableName, "daily_cumulative_output")
	_dredgerDatum.PreviousDayOutput = field.NewFloat64(tableName, "previous_day_output")
	_dredgerDatum.CutterDepth = field.NewFloat64(tableName, "cutter_depth")
	_dredgerDatum.TransverseWinchPressure = field.NewFloat64(tableName, "transverse_winch_pressure")
	_dredgerDatum.IntermediatePressure = field.NewFloat64(tableName, "intermediate_pressure")
	_dredgerDatum.BoosterPumpDischargePressure = field.NewFloat64(tableName, "booster_pump_discharge_pressure")
	_dredgerDatum.BoosterPumpShaftSealPressure = field.NewFloat64(tableName, "booster_pump_shaft_seal_pressure")
	_dredgerDatum.BoosterPumpSuctionSealPressure = field.NewFloat64(tableName, "booster_pump_suction_seal_pressure")
	_dredgerDatum.MudPipeDiameter = field.NewFloat64(tableName, "mud_pipe_diameter")
	_dredgerDatum.SetDiggingDepth = field.NewFloat64(tableName, "set_digging_depth")
	_dredgerDatum.SetOverDiggingDepth = field.NewFloat64(tableName, "set_over_digging_depth")
	_dredgerDatum.TideStation = field.NewFloat64(tableName, "tide_station")
	_dredgerDatum.ManualTideLevel = field.NewFloat64(tableName, "manual_tide_level")
	_dredgerDatum.TrimAngleSource = field.NewFloat64(tableName, "trim_angle_source")
	_dredgerDatum.LoadingSpeed = field.NewFloat64(tableName, "loading_speed")
	_dredgerDatum.EarToBottomDistance = field.NewFloat64(tableName, "ear_to_bottom_distance")
	_dredgerDatum.AutoTideLevel = field.NewFloat64(tableName, "auto_tide_level")
	_dredgerDatum.CuttingAngle = field.NewFloat64(tableName, "cutting_angle")
	_dredgerDatum.TransverseDirection = field.NewInt32(tableName, "transverse_direction")
	_dredgerDatum.MainPilePivotX = field.NewFloat64(tableName, "main_pile_pivot_x")
	_dredgerDatum.MainPilePivotY = field.NewFloat64(tableName, "main_pile_pivot_y")
	_dredgerDatum.BridgeWaterDepth = field.NewFloat64(tableName, "bridge_water_depth")
	_dredgerDatum.LeftTransverseAnchorDropped = field.NewFloat64(tableName, "left_transverse_anchor_dropped")
	_dredgerDatum.RightTransverseAnchorDropped = field.NewFloat64(tableName, "right_transverse_anchor_dropped")
	_dredgerDatum.LeftTransverseAnchorX = field.NewFloat64(tableName, "left_transverse_anchor_x")
	_dredgerDatum.LeftTransverseAnchorY = field.NewFloat64(tableName, "left_transverse_anchor_y")
	_dredgerDatum.RightTransverseAnchorX = field.NewFloat64(tableName, "right_transverse_anchor_x")
	_dredgerDatum.RightTransverseAnchorY = field.NewFloat64(tableName, "right_transverse_anchor_y")
	_dredgerDatum.LeftTransverseWorklineAngle = field.NewFloat64(tableName, "left_transverse_workline_angle")
	_dredgerDatum.RightTransverseWorklineAngle = field.NewFloat64(tableName, "right_transverse_workline_angle")
	_dredgerDatum.Damping = field.NewFloat64(tableName, "damping")
	_dredgerDatum.CuttingThickness = field.NewFloat64(tableName, "cutting_thickness")
	_dredgerDatum.AverageConcentration = field.NewFloat64(tableName, "average_concentration")
	_dredgerDatum.CurrentWorklineDirection = field.NewFloat64(tableName, "current_workline_direction")
	_dredgerDatum.CurrentWorklineStartX = field.NewFloat64(tableName, "current_workline_start_x")
	_dredgerDatum.CurrentWorklineStartY = field.NewFloat64(tableName, "current_workline_start_y")
	_dredgerDatum.CurrentWorklineEndX = field.NewFloat64(tableName, "current_workline_end_x")
	_dredgerDatum.CurrentWorklineEndY = field.NewFloat64(tableName, "current_workline_end_y")
	_dredgerDatum.ShipStatus = field.NewInt32(tableName, "ship_status")
	_dredgerDatum.LeftTransverseAnchorDeviation = field.NewFloat64(tableName, "left_transverse_anchor_deviation")
	_dredgerDatum.RightTransverseAnchorDeviation = field.NewFloat64(tableName, "right_transverse_anchor_deviation")
	_dredgerDatum.CutterDeviation = field.NewFloat64(tableName, "cutter_deviation")
	_dredgerDatum.MainPileDeviation = field.NewFloat64(tableName, "main_pile_deviation")
	_dredgerDatum.EarX = field.NewFloat64(tableName, "ear_x")
	_dredgerDatum.EarY = field.NewFloat64(tableName, "ear_y")
	_dredgerDatum.PreviousCutterDepth = field.NewFloat64(tableName, "previous_cutter_depth")
	_dredgerDatum.LeftBridgeWinchSpeed = field.NewFloat64(tableName, "left_bridge_winch_speed")
	_dredgerDatum.RightBridgeWinchSpeed = field.NewFloat64(tableName, "right_bridge_winch_speed")
	_dredgerDatum.BridgeSpeed = field.NewFloat64(tableName, "bridge_speed")
	_dredgerDatum.LeftBridgeWinchSpeed2 = field.NewFloat64(tableName, "left_bridge_winch_speed2")
	_dredgerDatum.RightBridgeWinchSpeed2 = field.NewFloat64(tableName, "right_bridge_winch_speed2")
	_dredgerDatum.WindDirection = field.NewFloat64(tableName, "wind_direction")
	_dredgerDatum.WindSpeed = field.NewFloat64(tableName, "wind_speed")
	_dredgerDatum.CurrentWorklineDirectionDpm = field.NewFloat64(tableName, "current_workline_direction_dpm")
	_dredgerDatum.CurrentWorklineStartXDpm = field.NewFloat64(tableName, "current_workline_start_x_dpm")
	_dredgerDatum.CurrentWorklineStartYDpm = field.NewFloat64(tableName, "current_workline_start_y_dpm")
	_dredgerDatum.CurrentWorklineEndXDpm = field.NewFloat64(tableName, "current_workline_end_x_dpm")
	_dredgerDatum.CurrentWorklineEndYDpm = field.NewFloat64(tableName, "current_workline_end_y_dpm")
	_dredgerDatum.PreviousCutterDepthDpm = field.NewFloat64(tableName, "previous_cutter_depth_dpm")
	_dredgerDatum.ShipDeviationAngle = field.NewFloat64(tableName, "ship_deviation_angle")

	_dredgerDatum.fillFieldMap()

	return _dredgerDatum
}

// dredgerDatum 绞吸式挖泥船施工数据表
type dredgerDatum struct {
	dredgerDatumDo

	ALL                               field.Asterisk
	ID                                field.Int64   // 主键id
	ShipName                          field.String  // 船名
	RecordTime                        field.Int64   // 时间
	LeftEarDraft                      field.Float64 // 左耳轴吃水
	UnderwaterPumpSuctionSealPressure field.Float64 // 水下泵吸入端封水压力
	UnderwaterPumpShaftSealPressure   field.Float64 // 水下泵轴端封水压力
	RightEarDraft                     field.Float64 // 右耳轴吃水
	UnderwaterPumpSpeed               field.Float64 // 水下泵转速
	FlowVelocity                      field.Float64 // 流速
	Density                           field.Float64 // 密度
	UnderwaterPumpMotorCurrent        field.Float64 // 水下泵电机电流
	TrolleyTravel                     field.Float64 // 台车行程
	CutterSpeed                       field.Float64 // 绞刀转速
	UnderwaterPumpSuctionVacuum       field.Float64 // 水下泵吸入真空
	BridgeAngle                       field.Float64 // 桥架角度
	CompassAngle                      field.Float64 // 罗经角度
	Gps1X                             field.Float64 // GPS1_X
	Gps1Y                             field.Float64 // GPS1_Y
	Gps1Heading                       field.Float64 // GPS1航向
	Gps1Speed                         field.Float64 // GPS1航速(
	TideLevel                         field.Float64 // 潮位
	WaterDensity                      field.Float64 // 水密度
	FieldSlurryDensity                field.Float64 // 现场泥浆比重
	CompassRadian                     field.Float64 // 罗经弧度
	Gps1Latitude                      field.Float64 // GPS1_纬度
	Gps1Longitude                     field.Float64 // GPS1_经度
	EarDraft                          field.Float64 // 耳轴吃水
	TransverseSpeed                   field.Float64 // 横移速度
	HourlyOutputRate                  field.Float64 // 小时产量率
	RotationRadius                    field.Float64 // 旋转半径
	CutterX                           field.Float64 // 绞刀x
	CutterY                           field.Float64 // 绞刀y
	OutletFlowVelocity                field.Float64 // 出口流速
	Concentration                     field.Float64 // 浓度
	FlowRate                          field.Float64 // 流量
	CutterSystemPressure              field.Float64 // 绞刀系统工作压力
	BridgeWinchPressure               field.Float64 // 桥架绞车压力
	VacuumReleaseValvePressure        field.Float64 // 真空释放阀压力
	MainPilePressure                  field.Float64 // 主钢桩工作压力
	Gps2X                             field.Float64 // GPS2_X
	Gps2Y                             field.Float64 // GPS2_Y
	Gps2Heading                       field.Float64 // GPS2航向
	Gps2Speed                         field.Float64 // GPS2航速
	NaturalSoilDensity                field.Float64 // 天然土密度(
	Gps2Latitude                      field.Float64 // GPS2_纬度
	Gps2Longitude                     field.Float64 // GPS2_经度
	LeftDensity                       field.Float64 // 左密度
	LeftFlowVelocity                  field.Float64 // 左流速
	SlurryOutput                      field.Float64 // 泥浆产量
	DrySoilOutput                     field.Float64 // 干土产量
	DryTonOutput                      field.Float64 // 干吨土方量
	OutputRate                        field.Float64 // 产量率
	CurrentShiftOutputRate            field.Float64 // 当前班产量率
	CurrentShiftOutput                field.Float64 // 当前班产量
	TransverseDistance                field.Float64 // 横移距离
	CurrentShift                      field.Int32   // 当前班次
	TransverseAngle                   field.Float64 // 横移角度(综合左右)
	DailyCumulativeOutput             field.Float64 // 今日累计产量
	PreviousDayOutput                 field.Float64 // 昨日产量
	CutterDepth                       field.Float64 // 绞刀深度
	TransverseWinchPressure           field.Float64 // 横移绞车压力
	IntermediatePressure              field.Float64 // 水下泵与升压泵中间压力
	BoosterPumpDischargePressure      field.Float64 // 升压泵排出压力
	BoosterPumpShaftSealPressure      field.Float64 // 升压泵轴端封水压力
	BoosterPumpSuctionSealPressure    field.Float64 // 升压泵吸口端封水压力
	MudPipeDiameter                   field.Float64 // 泥管直径
	SetDiggingDepth                   field.Float64 // 设定挖深
	SetOverDiggingDepth               field.Float64 // 设定超深
	TideStation                       field.Float64 // 潮位站
	ManualTideLevel                   field.Float64 // 手动输入潮位
	TrimAngleSource                   field.Float64 // 横倾纵倾角度来源
	LoadingSpeed                      field.Float64 // 装载速度
	EarToBottomDistance               field.Float64 // 耳轴到船底垂直距离
	AutoTideLevel                     field.Float64 // 自动读入的潮位
	CuttingAngle                      field.Float64 // 切削角度
	TransverseDirection               field.Int32   // 横移方向(-1：右/0：无/1：左)
	MainPilePivotX                    field.Float64 // 主桩支点x
	MainPilePivotY                    field.Float64 // 主桩支点y
	BridgeWaterDepth                  field.Float64 // 绞刀(桥架)水面深度
	LeftTransverseAnchorDropped       field.Float64 // 左横移锚下锚
	RightTransverseAnchorDropped      field.Float64 // 右横移锚下锚
	LeftTransverseAnchorX             field.Float64 // 左横移锚x
	LeftTransverseAnchorY             field.Float64 // 左横移锚y
	RightTransverseAnchorX            field.Float64 // 右横移锚x
	RightTransverseAnchorY            field.Float64 // 右横移锚y
	LeftTransverseWorklineAngle       field.Float64 // 左横移与工作线角度
	RightTransverseWorklineAngle      field.Float64 // 右横移与工作线角度
	Damping                           field.Float64 // 阻尼
	CuttingThickness                  field.Float64 // 切削厚度
	AverageConcentration              field.Float64 // 平均浓度
	CurrentWorklineDirection          field.Float64 // 当前工作线方向
	CurrentWorklineStartX             field.Float64 // 当前工作线起点x
	CurrentWorklineStartY             field.Float64 // 当前工作线起点y
	CurrentWorklineEndX               field.Float64 // 当前工作线终点x
	CurrentWorklineEndY               field.Float64 // 当前工作线终点y
	ShipStatus                        field.Int32   // 船舶状态
	LeftTransverseAnchorDeviation     field.Float64 // 左横移锚偏离中心线距离
	RightTransverseAnchorDeviation    field.Float64 // 右横移锚偏离中心线距离
	CutterDeviation                   field.Float64 // 绞刀偏离中心线距离
	MainPileDeviation                 field.Float64 // 主桩偏离中心线距离
	EarX                              field.Float64 // 耳轴x
	EarY                              field.Float64 // 耳轴y
	PreviousCutterDepth               field.Float64 // 绞刀头点上一次的深度
	LeftBridgeWinchSpeed              field.Float64 // 左舷桥架绞车速度(接口计算值)
	RightBridgeWinchSpeed             field.Float64 // 右舷桥架绞车速度(接口计算值
	BridgeSpeed                       field.Float64 // 桥架速度(接口计算值)
	LeftBridgeWinchSpeed2             field.Float64 // 左舷桥架绞车速度2(接口计算值)
	RightBridgeWinchSpeed2            field.Float64 // 右舷桥架绞车速度2(接口计算值)
	WindDirection                     field.Float64 // 风向(滤波后)
	WindSpeed                         field.Float64 // 风速(滤波后)
	CurrentWorklineDirectionDpm       field.Float64 // 当前工作线方向(自DPM)
	CurrentWorklineStartXDpm          field.Float64 // 当前工作线起点x(自DPM)
	CurrentWorklineStartYDpm          field.Float64 // 当前工作线起点y(自DPM)
	CurrentWorklineEndXDpm            field.Float64 // 当前工作线终点x(自DPM)
	CurrentWorklineEndYDpm            field.Float64 // 当前工作线终点y(自DPM)
	PreviousCutterDepthDpm            field.Float64 // 绞刀头点上一次的深度(自DPM)
	ShipDeviationAngle                field.Float64 // 船体偏移工作线角度

	fieldMap map[string]field.Expr
}

func (d dredgerDatum) Table(newTableName string) *dredgerDatum {
	d.dredgerDatumDo.UseTable(newTableName)
	return d.updateTableName(newTableName)
}

func (d dredgerDatum) As(alias string) *dredgerDatum {
	d.dredgerDatumDo.DO = *(d.dredgerDatumDo.As(alias).(*gen.DO))
	return d.updateTableName(alias)
}

func (d *dredgerDatum) updateTableName(table string) *dredgerDatum {
	d.ALL = field.NewAsterisk(table)
	d.ID = field.NewInt64(table, "id")
	d.ShipName = field.NewString(table, "ship_name")
	d.RecordTime = field.NewInt64(table, "record_time")
	d.LeftEarDraft = field.NewFloat64(table, "left_ear_draft")
	d.UnderwaterPumpSuctionSealPressure = field.NewFloat64(table, "underwater_pump_suction_seal_pressure")
	d.UnderwaterPumpShaftSealPressure = field.NewFloat64(table, "underwater_pump_shaft_seal_pressure")
	d.RightEarDraft = field.NewFloat64(table, "right_ear_draft")
	d.UnderwaterPumpSpeed = field.NewFloat64(table, "underwater_pump_speed")
	d.FlowVelocity = field.NewFloat64(table, "flow_velocity")
	d.Density = field.NewFloat64(table, "density")
	d.UnderwaterPumpMotorCurrent = field.NewFloat64(table, "underwater_pump_motor_current")
	d.TrolleyTravel = field.NewFloat64(table, "trolley_travel")
	d.CutterSpeed = field.NewFloat64(table, "cutter_speed")
	d.UnderwaterPumpSuctionVacuum = field.NewFloat64(table, "underwater_pump_suction_vacuum")
	d.BridgeAngle = field.NewFloat64(table, "bridge_angle")
	d.CompassAngle = field.NewFloat64(table, "compass_angle")
	d.Gps1X = field.NewFloat64(table, "gps1_x")
	d.Gps1Y = field.NewFloat64(table, "gps1_y")
	d.Gps1Heading = field.NewFloat64(table, "gps1_heading")
	d.Gps1Speed = field.NewFloat64(table, "gps1_speed")
	d.TideLevel = field.NewFloat64(table, "tide_level")
	d.WaterDensity = field.NewFloat64(table, "water_density")
	d.FieldSlurryDensity = field.NewFloat64(table, "field_slurry_density")
	d.CompassRadian = field.NewFloat64(table, "compass_radian")
	d.Gps1Latitude = field.NewFloat64(table, "gps1_latitude")
	d.Gps1Longitude = field.NewFloat64(table, "gps1_longitude")
	d.EarDraft = field.NewFloat64(table, "ear_draft")
	d.TransverseSpeed = field.NewFloat64(table, "transverse_speed")
	d.HourlyOutputRate = field.NewFloat64(table, "hourly_output_rate")
	d.RotationRadius = field.NewFloat64(table, "rotation_radius")
	d.CutterX = field.NewFloat64(table, "cutter_x")
	d.CutterY = field.NewFloat64(table, "cutter_y")
	d.OutletFlowVelocity = field.NewFloat64(table, "outlet_flow_velocity")
	d.Concentration = field.NewFloat64(table, "concentration")
	d.FlowRate = field.NewFloat64(table, "flow_rate")
	d.CutterSystemPressure = field.NewFloat64(table, "cutter_system_pressure")
	d.BridgeWinchPressure = field.NewFloat64(table, "bridge_winch_pressure")
	d.VacuumReleaseValvePressure = field.NewFloat64(table, "vacuum_release_valve_pressure")
	d.MainPilePressure = field.NewFloat64(table, "main_pile_pressure")
	d.Gps2X = field.NewFloat64(table, "gps2_x")
	d.Gps2Y = field.NewFloat64(table, "gps2_y")
	d.Gps2Heading = field.NewFloat64(table, "gps2_heading")
	d.Gps2Speed = field.NewFloat64(table, "gps2_speed")
	d.NaturalSoilDensity = field.NewFloat64(table, "natural_soil_density")
	d.Gps2Latitude = field.NewFloat64(table, "gps2_latitude")
	d.Gps2Longitude = field.NewFloat64(table, "gps2_longitude")
	d.LeftDensity = field.NewFloat64(table, "left_density")
	d.LeftFlowVelocity = field.NewFloat64(table, "left_flow_velocity")
	d.SlurryOutput = field.NewFloat64(table, "slurry_output")
	d.DrySoilOutput = field.NewFloat64(table, "dry_soil_output")
	d.DryTonOutput = field.NewFloat64(table, "dry_ton_output")
	d.OutputRate = field.NewFloat64(table, "output_rate")
	d.CurrentShiftOutputRate = field.NewFloat64(table, "current_shift_output_rate")
	d.CurrentShiftOutput = field.NewFloat64(table, "current_shift_output")
	d.TransverseDistance = field.NewFloat64(table, "transverse_distance")
	d.CurrentShift = field.NewInt32(table, "current_shift")
	d.TransverseAngle = field.NewFloat64(table, "transverse_angle")
	d.DailyCumulativeOutput = field.NewFloat64(table, "daily_cumulative_output")
	d.PreviousDayOutput = field.NewFloat64(table, "previous_day_output")
	d.CutterDepth = field.NewFloat64(table, "cutter_depth")
	d.TransverseWinchPressure = field.NewFloat64(table, "transverse_winch_pressure")
	d.IntermediatePressure = field.NewFloat64(table, "intermediate_pressure")
	d.BoosterPumpDischargePressure = field.NewFloat64(table, "booster_pump_discharge_pressure")
	d.BoosterPumpShaftSealPressure = field.NewFloat64(table, "booster_pump_shaft_seal_pressure")
	d.BoosterPumpSuctionSealPressure = field.NewFloat64(table, "booster_pump_suction_seal_pressure")
	d.MudPipeDiameter = field.NewFloat64(table, "mud_pipe_diameter")
	d.SetDiggingDepth = field.NewFloat64(table, "set_digging_depth")
	d.SetOverDiggingDepth = field.NewFloat64(table, "set_over_digging_depth")
	d.TideStation = field.NewFloat64(table, "tide_station")
	d.ManualTideLevel = field.NewFloat64(table, "manual_tide_level")
	d.TrimAngleSource = field.NewFloat64(table, "trim_angle_source")
	d.LoadingSpeed = field.NewFloat64(table, "loading_speed")
	d.EarToBottomDistance = field.NewFloat64(table, "ear_to_bottom_distance")
	d.AutoTideLevel = field.NewFloat64(table, "auto_tide_level")
	d.CuttingAngle = field.NewFloat64(table, "cutting_angle")
	d.TransverseDirection = field.NewInt32(table, "transverse_direction")
	d.MainPilePivotX = field.NewFloat64(table, "main_pile_pivot_x")
	d.MainPilePivotY = field.NewFloat64(table, "main_pile_pivot_y")
	d.BridgeWaterDepth = field.NewFloat64(table, "bridge_water_depth")
	d.LeftTransverseAnchorDropped = field.NewFloat64(table, "left_transverse_anchor_dropped")
	d.RightTransverseAnchorDropped = field.NewFloat64(table, "right_transverse_anchor_dropped")
	d.LeftTransverseAnchorX = field.NewFloat64(table, "left_transverse_anchor_x")
	d.LeftTransverseAnchorY = field.NewFloat64(table, "left_transverse_anchor_y")
	d.RightTransverseAnchorX = field.NewFloat64(table, "right_transverse_anchor_x")
	d.RightTransverseAnchorY = field.NewFloat64(table, "right_transverse_anchor_y")
	d.LeftTransverseWorklineAngle = field.NewFloat64(table, "left_transverse_workline_angle")
	d.RightTransverseWorklineAngle = field.NewFloat64(table, "right_transverse_workline_angle")
	d.Damping = field.NewFloat64(table, "damping")
	d.CuttingThickness = field.NewFloat64(table, "cutting_thickness")
	d.AverageConcentration = field.NewFloat64(table, "average_concentration")
	d.CurrentWorklineDirection = field.NewFloat64(table, "current_workline_direction")
	d.CurrentWorklineStartX = field.NewFloat64(table, "current_workline_start_x")
	d.CurrentWorklineStartY = field.NewFloat64(table, "current_workline_start_y")
	d.CurrentWorklineEndX = field.NewFloat64(table, "current_workline_end_x")
	d.CurrentWorklineEndY = field.NewFloat64(table, "current_workline_end_y")
	d.ShipStatus = field.NewInt32(table, "ship_status")
	d.LeftTransverseAnchorDeviation = field.NewFloat64(table, "left_transverse_anchor_deviation")
	d.RightTransverseAnchorDeviation = field.NewFloat64(table, "right_transverse_anchor_deviation")
	d.CutterDeviation = field.NewFloat64(table, "cutter_deviation")
	d.MainPileDeviation = field.NewFloat64(table, "main_pile_deviation")
	d.EarX = field.NewFloat64(table, "ear_x")
	d.EarY = field.NewFloat64(table, "ear_y")
	d.PreviousCutterDepth = field.NewFloat64(table, "previous_cutter_depth")
	d.LeftBridgeWinchSpeed = field.NewFloat64(table, "left_bridge_winch_speed")
	d.RightBridgeWinchSpeed = field.NewFloat64(table, "right_bridge_winch_speed")
	d.BridgeSpeed = field.NewFloat64(table, "bridge_speed")
	d.LeftBridgeWinchSpeed2 = field.NewFloat64(table, "left_bridge_winch_speed2")
	d.RightBridgeWinchSpeed2 = field.NewFloat64(table, "right_bridge_winch_speed2")
	d.WindDirection = field.NewFloat64(table, "wind_direction")
	d.WindSpeed = field.NewFloat64(table, "wind_speed")
	d.CurrentWorklineDirectionDpm = field.NewFloat64(table, "current_workline_direction_dpm")
	d.CurrentWorklineStartXDpm = field.NewFloat64(table, "current_workline_start_x_dpm")
	d.CurrentWorklineStartYDpm = field.NewFloat64(table, "current_workline_start_y_dpm")
	d.CurrentWorklineEndXDpm = field.NewFloat64(table, "current_workline_end_x_dpm")
	d.CurrentWorklineEndYDpm = field.NewFloat64(table, "current_workline_end_y_dpm")
	d.PreviousCutterDepthDpm = field.NewFloat64(table, "previous_cutter_depth_dpm")
	d.ShipDeviationAngle = field.NewFloat64(table, "ship_deviation_angle")

	d.fillFieldMap()

	return d
}

func (d *dredgerDatum) GetFieldByName(fieldName string) (field.OrderExpr, bool) {
	_f, ok := d.fieldMap[fieldName]
	if !ok || _f == nil {
		return nil, false
	}
	_oe, ok := _f.(field.OrderExpr)
	return _oe, ok
}

func (d *dredgerDatum) fillFieldMap() {
	d.fieldMap = make(map[string]field.Expr, 117)
	d.fieldMap["id"] = d.ID
	d.fieldMap["ship_name"] = d.ShipName
	d.fieldMap["record_time"] = d.RecordTime
	d.fieldMap["left_ear_draft"] = d.LeftEarDraft
	d.fieldMap["underwater_pump_suction_seal_pressure"] = d.UnderwaterPumpSuctionSealPressure
	d.fieldMap["underwater_pump_shaft_seal_pressure"] = d.UnderwaterPumpShaftSealPressure
	d.fieldMap["right_ear_draft"] = d.RightEarDraft
	d.fieldMap["underwater_pump_speed"] = d.UnderwaterPumpSpeed
	d.fieldMap["flow_velocity"] = d.FlowVelocity
	d.fieldMap["density"] = d.Density
	d.fieldMap["underwater_pump_motor_current"] = d.UnderwaterPumpMotorCurrent
	d.fieldMap["trolley_travel"] = d.TrolleyTravel
	d.fieldMap["cutter_speed"] = d.CutterSpeed
	d.fieldMap["underwater_pump_suction_vacuum"] = d.UnderwaterPumpSuctionVacuum
	d.fieldMap["bridge_angle"] = d.BridgeAngle
	d.fieldMap["compass_angle"] = d.CompassAngle
	d.fieldMap["gps1_x"] = d.Gps1X
	d.fieldMap["gps1_y"] = d.Gps1Y
	d.fieldMap["gps1_heading"] = d.Gps1Heading
	d.fieldMap["gps1_speed"] = d.Gps1Speed
	d.fieldMap["tide_level"] = d.TideLevel
	d.fieldMap["water_density"] = d.WaterDensity
	d.fieldMap["field_slurry_density"] = d.FieldSlurryDensity
	d.fieldMap["compass_radian"] = d.CompassRadian
	d.fieldMap["gps1_latitude"] = d.Gps1Latitude
	d.fieldMap["gps1_longitude"] = d.Gps1Longitude
	d.fieldMap["ear_draft"] = d.EarDraft
	d.fieldMap["transverse_speed"] = d.TransverseSpeed
	d.fieldMap["hourly_output_rate"] = d.HourlyOutputRate
	d.fieldMap["rotation_radius"] = d.RotationRadius
	d.fieldMap["cutter_x"] = d.CutterX
	d.fieldMap["cutter_y"] = d.CutterY
	d.fieldMap["outlet_flow_velocity"] = d.OutletFlowVelocity
	d.fieldMap["concentration"] = d.Concentration
	d.fieldMap["flow_rate"] = d.FlowRate
	d.fieldMap["cutter_system_pressure"] = d.CutterSystemPressure
	d.fieldMap["bridge_winch_pressure"] = d.BridgeWinchPressure
	d.fieldMap["vacuum_release_valve_pressure"] = d.VacuumReleaseValvePressure
	d.fieldMap["main_pile_pressure"] = d.MainPilePressure
	d.fieldMap["gps2_x"] = d.Gps2X
	d.fieldMap["gps2_y"] = d.Gps2Y
	d.fieldMap["gps2_heading"] = d.Gps2Heading
	d.fieldMap["gps2_speed"] = d.Gps2Speed
	d.fieldMap["natural_soil_density"] = d.NaturalSoilDensity
	d.fieldMap["gps2_latitude"] = d.Gps2Latitude
	d.fieldMap["gps2_longitude"] = d.Gps2Longitude
	d.fieldMap["left_density"] = d.LeftDensity
	d.fieldMap["left_flow_velocity"] = d.LeftFlowVelocity
	d.fieldMap["slurry_output"] = d.SlurryOutput
	d.fieldMap["dry_soil_output"] = d.DrySoilOutput
	d.fieldMap["dry_ton_output"] = d.DryTonOutput
	d.fieldMap["output_rate"] = d.OutputRate
	d.fieldMap["current_shift_output_rate"] = d.CurrentShiftOutputRate
	d.fieldMap["current_shift_output"] = d.CurrentShiftOutput
	d.fieldMap["transverse_distance"] = d.TransverseDistance
	d.fieldMap["current_shift"] = d.CurrentShift
	d.fieldMap["transverse_angle"] = d.TransverseAngle
	d.fieldMap["daily_cumulative_output"] = d.DailyCumulativeOutput
	d.fieldMap["previous_day_output"] = d.PreviousDayOutput
	d.fieldMap["cutter_depth"] = d.CutterDepth
	d.fieldMap["transverse_winch_pressure"] = d.TransverseWinchPressure
	d.fieldMap["intermediate_pressure"] = d.IntermediatePressure
	d.fieldMap["booster_pump_discharge_pressure"] = d.BoosterPumpDischargePressure
	d.fieldMap["booster_pump_shaft_seal_pressure"] = d.BoosterPumpShaftSealPressure
	d.fieldMap["booster_pump_suction_seal_pressure"] = d.BoosterPumpSuctionSealPressure
	d.fieldMap["mud_pipe_diameter"] = d.MudPipeDiameter
	d.fieldMap["set_digging_depth"] = d.SetDiggingDepth
	d.fieldMap["set_over_digging_depth"] = d.SetOverDiggingDepth
	d.fieldMap["tide_station"] = d.TideStation
	d.fieldMap["manual_tide_level"] = d.ManualTideLevel
	d.fieldMap["trim_angle_source"] = d.TrimAngleSource
	d.fieldMap["loading_speed"] = d.LoadingSpeed
	d.fieldMap["ear_to_bottom_distance"] = d.EarToBottomDistance
	d.fieldMap["auto_tide_level"] = d.AutoTideLevel
	d.fieldMap["cutting_angle"] = d.CuttingAngle
	d.fieldMap["transverse_direction"] = d.TransverseDirection
	d.fieldMap["main_pile_pivot_x"] = d.MainPilePivotX
	d.fieldMap["main_pile_pivot_y"] = d.MainPilePivotY
	d.fieldMap["bridge_water_depth"] = d.BridgeWaterDepth
	d.fieldMap["left_transverse_anchor_dropped"] = d.LeftTransverseAnchorDropped
	d.fieldMap["right_transverse_anchor_dropped"] = d.RightTransverseAnchorDropped
	d.fieldMap["left_transverse_anchor_x"] = d.LeftTransverseAnchorX
	d.fieldMap["left_transverse_anchor_y"] = d.LeftTransverseAnchorY
	d.fieldMap["right_transverse_anchor_x"] = d.RightTransverseAnchorX
	d.fieldMap["right_transverse_anchor_y"] = d.RightTransverseAnchorY
	d.fieldMap["left_transverse_workline_angle"] = d.LeftTransverseWorklineAngle
	d.fieldMap["right_transverse_workline_angle"] = d.RightTransverseWorklineAngle
	d.fieldMap["damping"] = d.Damping
	d.fieldMap["cutting_thickness"] = d.CuttingThickness
	d.fieldMap["average_concentration"] = d.AverageConcentration
	d.fieldMap["current_workline_direction"] = d.CurrentWorklineDirection
	d.fieldMap["current_workline_start_x"] = d.CurrentWorklineStartX
	d.fieldMap["current_workline_start_y"] = d.CurrentWorklineStartY
	d.fieldMap["current_workline_end_x"] = d.CurrentWorklineEndX
	d.fieldMap["current_workline_end_y"] = d.CurrentWorklineEndY
	d.fieldMap["ship_status"] = d.ShipStatus
	d.fieldMap["left_transverse_anchor_deviation"] = d.LeftTransverseAnchorDeviation
	d.fieldMap["right_transverse_anchor_deviation"] = d.RightTransverseAnchorDeviation
	d.fieldMap["cutter_deviation"] = d.CutterDeviation
	d.fieldMap["main_pile_deviation"] = d.MainPileDeviation
	d.fieldMap["ear_x"] = d.EarX
	d.fieldMap["ear_y"] = d.EarY
	d.fieldMap["previous_cutter_depth"] = d.PreviousCutterDepth
	d.fieldMap["left_bridge_winch_speed"] = d.LeftBridgeWinchSpeed
	d.fieldMap["right_bridge_winch_speed"] = d.RightBridgeWinchSpeed
	d.fieldMap["bridge_speed"] = d.BridgeSpeed
	d.fieldMap["left_bridge_winch_speed2"] = d.LeftBridgeWinchSpeed2
	d.fieldMap["right_bridge_winch_speed2"] = d.RightBridgeWinchSpeed2
	d.fieldMap["wind_direction"] = d.WindDirection
	d.fieldMap["wind_speed"] = d.WindSpeed
	d.fieldMap["current_workline_direction_dpm"] = d.CurrentWorklineDirectionDpm
	d.fieldMap["current_workline_start_x_dpm"] = d.CurrentWorklineStartXDpm
	d.fieldMap["current_workline_start_y_dpm"] = d.CurrentWorklineStartYDpm
	d.fieldMap["current_workline_end_x_dpm"] = d.CurrentWorklineEndXDpm
	d.fieldMap["current_workline_end_y_dpm"] = d.CurrentWorklineEndYDpm
	d.fieldMap["previous_cutter_depth_dpm"] = d.PreviousCutterDepthDpm
	d.fieldMap["ship_deviation_angle"] = d.ShipDeviationAngle
}

func (d dredgerDatum) clone(db *gorm.DB) dredgerDatum {
	d.dredgerDatumDo.ReplaceConnPool(db.Statement.ConnPool)
	return d
}

func (d dredgerDatum) replaceDB(db *gorm.DB) dredgerDatum {
	d.dredgerDatumDo.ReplaceDB(db)
	return d
}

type dredgerDatumDo struct{ gen.DO }

type IDredgerDatumDo interface {
	gen.SubQuery
	Debug() IDredgerDatumDo
	WithContext(ctx context.Context) IDredgerDatumDo
	WithResult(fc func(tx gen.Dao)) gen.ResultInfo
	ReplaceDB(db *gorm.DB)
	ReadDB() IDredgerDatumDo
	WriteDB() IDredgerDatumDo
	As(alias string) gen.Dao
	Session(config *gorm.Session) IDredgerDatumDo
	Columns(cols ...field.Expr) gen.Columns
	Clauses(conds ...clause.Expression) IDredgerDatumDo
	Not(conds ...gen.Condition) IDredgerDatumDo
	Or(conds ...gen.Condition) IDredgerDatumDo
	Select(conds ...field.Expr) IDredgerDatumDo
	Where(conds ...gen.Condition) IDredgerDatumDo
	Order(conds ...field.Expr) IDredgerDatumDo
	Distinct(cols ...field.Expr) IDredgerDatumDo
	Omit(cols ...field.Expr) IDredgerDatumDo
	Join(table schema.Tabler, on ...field.Expr) IDredgerDatumDo
	LeftJoin(table schema.Tabler, on ...field.Expr) IDredgerDatumDo
	RightJoin(table schema.Tabler, on ...field.Expr) IDredgerDatumDo
	Group(cols ...field.Expr) IDredgerDatumDo
	Having(conds ...gen.Condition) IDredgerDatumDo
	Limit(limit int) IDredgerDatumDo
	Offset(offset int) IDredgerDatumDo
	Count() (count int64, err error)
	Scopes(funcs ...func(gen.Dao) gen.Dao) IDredgerDatumDo
	Unscoped() IDredgerDatumDo
	Create(values ...*model.DredgerDatum) error
	CreateInBatches(values []*model.DredgerDatum, batchSize int) error
	Save(values ...*model.DredgerDatum) error
	First() (*model.DredgerDatum, error)
	Take() (*model.DredgerDatum, error)
	Last() (*model.DredgerDatum, error)
	Find() ([]*model.DredgerDatum, error)
	FindInBatch(batchSize int, fc func(tx gen.Dao, batch int) error) (results []*model.DredgerDatum, err error)
	FindInBatches(result *[]*model.DredgerDatum, batchSize int, fc func(tx gen.Dao, batch int) error) error
	Pluck(column field.Expr, dest interface{}) error
	Delete(...*model.DredgerDatum) (info gen.ResultInfo, err error)
	Update(column field.Expr, value interface{}) (info gen.ResultInfo, err error)
	UpdateSimple(columns ...field.AssignExpr) (info gen.ResultInfo, err error)
	Updates(value interface{}) (info gen.ResultInfo, err error)
	UpdateColumn(column field.Expr, value interface{}) (info gen.ResultInfo, err error)
	UpdateColumnSimple(columns ...field.AssignExpr) (info gen.ResultInfo, err error)
	UpdateColumns(value interface{}) (info gen.ResultInfo, err error)
	UpdateFrom(q gen.SubQuery) gen.Dao
	Attrs(attrs ...field.AssignExpr) IDredgerDatumDo
	Assign(attrs ...field.AssignExpr) IDredgerDatumDo
	Joins(fields ...field.RelationField) IDredgerDatumDo
	Preload(fields ...field.RelationField) IDredgerDatumDo
	FirstOrInit() (*model.DredgerDatum, error)
	FirstOrCreate() (*model.DredgerDatum, error)
	FindByPage(offset int, limit int) (result []*model.DredgerDatum, count int64, err error)
	ScanByPage(result interface{}, offset int, limit int) (count int64, err error)
	Scan(result interface{}) (err error)
	Returning(value interface{}, columns ...string) IDredgerDatumDo
	UnderlyingDB() *gorm.DB
	schema.Tabler
}

func (d dredgerDatumDo) Debug() IDredgerDatumDo {
	return d.withDO(d.DO.Debug())
}

func (d dredgerDatumDo) WithContext(ctx context.Context) IDredgerDatumDo {
	return d.withDO(d.DO.WithContext(ctx))
}

func (d dredgerDatumDo) ReadDB() IDredgerDatumDo {
	return d.Clauses(dbresolver.Read)
}

func (d dredgerDatumDo) WriteDB() IDredgerDatumDo {
	return d.Clauses(dbresolver.Write)
}

func (d dredgerDatumDo) Session(config *gorm.Session) IDredgerDatumDo {
	return d.withDO(d.DO.Session(config))
}

func (d dredgerDatumDo) Clauses(conds ...clause.Expression) IDredgerDatumDo {
	return d.withDO(d.DO.Clauses(conds...))
}

func (d dredgerDatumDo) Returning(value interface{}, columns ...string) IDredgerDatumDo {
	return d.withDO(d.DO.Returning(value, columns...))
}

func (d dredgerDatumDo) Not(conds ...gen.Condition) IDredgerDatumDo {
	return d.withDO(d.DO.Not(conds...))
}

func (d dredgerDatumDo) Or(conds ...gen.Condition) IDredgerDatumDo {
	return d.withDO(d.DO.Or(conds...))
}

func (d dredgerDatumDo) Select(conds ...field.Expr) IDredgerDatumDo {
	return d.withDO(d.DO.Select(conds...))
}

func (d dredgerDatumDo) Where(conds ...gen.Condition) IDredgerDatumDo {
	return d.withDO(d.DO.Where(conds...))
}

func (d dredgerDatumDo) Order(conds ...field.Expr) IDredgerDatumDo {
	return d.withDO(d.DO.Order(conds...))
}

func (d dredgerDatumDo) Distinct(cols ...field.Expr) IDredgerDatumDo {
	return d.withDO(d.DO.Distinct(cols...))
}

func (d dredgerDatumDo) Omit(cols ...field.Expr) IDredgerDatumDo {
	return d.withDO(d.DO.Omit(cols...))
}

func (d dredgerDatumDo) Join(table schema.Tabler, on ...field.Expr) IDredgerDatumDo {
	return d.withDO(d.DO.Join(table, on...))
}

func (d dredgerDatumDo) LeftJoin(table schema.Tabler, on ...field.Expr) IDredgerDatumDo {
	return d.withDO(d.DO.LeftJoin(table, on...))
}

func (d dredgerDatumDo) RightJoin(table schema.Tabler, on ...field.Expr) IDredgerDatumDo {
	return d.withDO(d.DO.RightJoin(table, on...))
}

func (d dredgerDatumDo) Group(cols ...field.Expr) IDredgerDatumDo {
	return d.withDO(d.DO.Group(cols...))
}

func (d dredgerDatumDo) Having(conds ...gen.Condition) IDredgerDatumDo {
	return d.withDO(d.DO.Having(conds...))
}

func (d dredgerDatumDo) Limit(limit int) IDredgerDatumDo {
	return d.withDO(d.DO.Limit(limit))
}

func (d dredgerDatumDo) Offset(offset int) IDredgerDatumDo {
	return d.withDO(d.DO.Offset(offset))
}

func (d dredgerDatumDo) Scopes(funcs ...func(gen.Dao) gen.Dao) IDredgerDatumDo {
	return d.withDO(d.DO.Scopes(funcs...))
}

func (d dredgerDatumDo) Unscoped() IDredgerDatumDo {
	return d.withDO(d.DO.Unscoped())
}

func (d dredgerDatumDo) Create(values ...*model.DredgerDatum) error {
	if len(values) == 0 {
		return nil
	}
	return d.DO.Create(values)
}

func (d dredgerDatumDo) CreateInBatches(values []*model.DredgerDatum, batchSize int) error {
	return d.DO.CreateInBatches(values, batchSize)
}

// Save : !!! underlying implementation is different with GORM
// The method is equivalent to executing the statement: db.Clauses(clause.OnConflict{UpdateAll: true}).Create(values)
func (d dredgerDatumDo) Save(values ...*model.DredgerDatum) error {
	if len(values) == 0 {
		return nil
	}
	return d.DO.Save(values)
}

func (d dredgerDatumDo) First() (*model.DredgerDatum, error) {
	if result, err := d.DO.First(); err != nil {
		return nil, err
	} else {
		return result.(*model.DredgerDatum), nil
	}
}

func (d dredgerDatumDo) Take() (*model.DredgerDatum, error) {
	if result, err := d.DO.Take(); err != nil {
		return nil, err
	} else {
		return result.(*model.DredgerDatum), nil
	}
}

func (d dredgerDatumDo) Last() (*model.DredgerDatum, error) {
	if result, err := d.DO.Last(); err != nil {
		return nil, err
	} else {
		return result.(*model.DredgerDatum), nil
	}
}

func (d dredgerDatumDo) Find() ([]*model.DredgerDatum, error) {
	result, err := d.DO.Find()
	return result.([]*model.DredgerDatum), err
}

func (d dredgerDatumDo) FindInBatch(batchSize int, fc func(tx gen.Dao, batch int) error) (results []*model.DredgerDatum, err error) {
	buf := make([]*model.DredgerDatum, 0, batchSize)
	err = d.DO.FindInBatches(&buf, batchSize, func(tx gen.Dao, batch int) error {
		defer func() { results = append(results, buf...) }()
		return fc(tx, batch)
	})
	return results, err
}

func (d dredgerDatumDo) FindInBatches(result *[]*model.DredgerDatum, batchSize int, fc func(tx gen.Dao, batch int) error) error {
	return d.DO.FindInBatches(result, batchSize, fc)
}

func (d dredgerDatumDo) Attrs(attrs ...field.AssignExpr) IDredgerDatumDo {
	return d.withDO(d.DO.Attrs(attrs...))
}

func (d dredgerDatumDo) Assign(attrs ...field.AssignExpr) IDredgerDatumDo {
	return d.withDO(d.DO.Assign(attrs...))
}

func (d dredgerDatumDo) Joins(fields ...field.RelationField) IDredgerDatumDo {
	for _, _f := range fields {
		d = *d.withDO(d.DO.Joins(_f))
	}
	return &d
}

func (d dredgerDatumDo) Preload(fields ...field.RelationField) IDredgerDatumDo {
	for _, _f := range fields {
		d = *d.withDO(d.DO.Preload(_f))
	}
	return &d
}

func (d dredgerDatumDo) FirstOrInit() (*model.DredgerDatum, error) {
	if result, err := d.DO.FirstOrInit(); err != nil {
		return nil, err
	} else {
		return result.(*model.DredgerDatum), nil
	}
}

func (d dredgerDatumDo) FirstOrCreate() (*model.DredgerDatum, error) {
	if result, err := d.DO.FirstOrCreate(); err != nil {
		return nil, err
	} else {
		return result.(*model.DredgerDatum), nil
	}
}

func (d dredgerDatumDo) FindByPage(offset int, limit int) (result []*model.DredgerDatum, count int64, err error) {
	result, err = d.Offset(offset).Limit(limit).Find()
	if err != nil {
		return
	}

	if size := len(result); 0 < limit && 0 < size && size < limit {
		count = int64(size + offset)
		return
	}

	count, err = d.Offset(-1).Limit(-1).Count()
	return
}

func (d dredgerDatumDo) ScanByPage(result interface{}, offset int, limit int) (count int64, err error) {
	count, err = d.Count()
	if err != nil {
		return
	}

	err = d.Offset(offset).Limit(limit).Scan(result)
	return
}

func (d dredgerDatumDo) Scan(result interface{}) (err error) {
	return d.DO.Scan(result)
}

func (d dredgerDatumDo) Delete(models ...*model.DredgerDatum) (result gen.ResultInfo, err error) {
	return d.DO.Delete(models)
}

func (d *dredgerDatumDo) withDO(do gen.Dao) *dredgerDatumDo {
	d.DO = *do.(*gen.DO)
	return d
}
